/*
SkySQL API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.12
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package skysql

import (
	"encoding/json"
)

// Region Geographic region, as defined by the providers
type Region struct {
	SysModCount string `json:"sys_mod_count"`
	Active string `json:"active"`
	SysUpdatedOn string `json:"sys_updated_on"`
	SysTags string `json:"sys_tags"`
	SysId string `json:"sys_id"`
	Default string `json:"default"`
	NodeType *string `json:"node_type,omitempty"`
	SysUpdatedBy string `json:"sys_updated_by"`
	Provider string `json:"provider"`
	SysCreatedOn string `json:"sys_created_on"`
	Name string `json:"name"`
	Location string `json:"location"`
	Region string `json:"region"`
	SysCreatedBy string `json:"sys_created_by"`
	ApiHandle string `json:"api_handle"`
}

// NewRegion instantiates a new Region object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegion(sysModCount string, active string, sysUpdatedOn string, sysTags string, sysId string, default_ string, sysUpdatedBy string, provider string, sysCreatedOn string, name string, location string, region string, sysCreatedBy string, apiHandle string) *Region {
	this := Region{}
	this.SysModCount = sysModCount
	this.Active = active
	this.SysUpdatedOn = sysUpdatedOn
	this.SysTags = sysTags
	this.SysId = sysId
	this.Default = default_
	this.SysUpdatedBy = sysUpdatedBy
	this.Provider = provider
	this.SysCreatedOn = sysCreatedOn
	this.Name = name
	this.Location = location
	this.Region = region
	this.SysCreatedBy = sysCreatedBy
	this.ApiHandle = apiHandle
	return &this
}

// NewRegionWithDefaults instantiates a new Region object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegionWithDefaults() *Region {
	this := Region{}
	return &this
}

// GetSysModCount returns the SysModCount field value
func (o *Region) GetSysModCount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SysModCount
}

// GetSysModCountOk returns a tuple with the SysModCount field value
// and a boolean to check if the value has been set.
func (o *Region) GetSysModCountOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SysModCount, true
}

// SetSysModCount sets field value
func (o *Region) SetSysModCount(v string) {
	o.SysModCount = v
}

// GetActive returns the Active field value
func (o *Region) GetActive() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Active
}

// GetActiveOk returns a tuple with the Active field value
// and a boolean to check if the value has been set.
func (o *Region) GetActiveOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Active, true
}

// SetActive sets field value
func (o *Region) SetActive(v string) {
	o.Active = v
}

// GetSysUpdatedOn returns the SysUpdatedOn field value
func (o *Region) GetSysUpdatedOn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SysUpdatedOn
}

// GetSysUpdatedOnOk returns a tuple with the SysUpdatedOn field value
// and a boolean to check if the value has been set.
func (o *Region) GetSysUpdatedOnOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SysUpdatedOn, true
}

// SetSysUpdatedOn sets field value
func (o *Region) SetSysUpdatedOn(v string) {
	o.SysUpdatedOn = v
}

// GetSysTags returns the SysTags field value
func (o *Region) GetSysTags() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SysTags
}

// GetSysTagsOk returns a tuple with the SysTags field value
// and a boolean to check if the value has been set.
func (o *Region) GetSysTagsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SysTags, true
}

// SetSysTags sets field value
func (o *Region) SetSysTags(v string) {
	o.SysTags = v
}

// GetSysId returns the SysId field value
func (o *Region) GetSysId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SysId
}

// GetSysIdOk returns a tuple with the SysId field value
// and a boolean to check if the value has been set.
func (o *Region) GetSysIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SysId, true
}

// SetSysId sets field value
func (o *Region) SetSysId(v string) {
	o.SysId = v
}

// GetDefault returns the Default field value
func (o *Region) GetDefault() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Default
}

// GetDefaultOk returns a tuple with the Default field value
// and a boolean to check if the value has been set.
func (o *Region) GetDefaultOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Default, true
}

// SetDefault sets field value
func (o *Region) SetDefault(v string) {
	o.Default = v
}

// GetNodeType returns the NodeType field value if set, zero value otherwise.
func (o *Region) GetNodeType() string {
	if o == nil || o.NodeType == nil {
		var ret string
		return ret
	}
	return *o.NodeType
}

// GetNodeTypeOk returns a tuple with the NodeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Region) GetNodeTypeOk() (*string, bool) {
	if o == nil || o.NodeType == nil {
		return nil, false
	}
	return o.NodeType, true
}

// HasNodeType returns a boolean if a field has been set.
func (o *Region) HasNodeType() bool {
	if o != nil && o.NodeType != nil {
		return true
	}

	return false
}

// SetNodeType gets a reference to the given string and assigns it to the NodeType field.
func (o *Region) SetNodeType(v string) {
	o.NodeType = &v
}

// GetSysUpdatedBy returns the SysUpdatedBy field value
func (o *Region) GetSysUpdatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SysUpdatedBy
}

// GetSysUpdatedByOk returns a tuple with the SysUpdatedBy field value
// and a boolean to check if the value has been set.
func (o *Region) GetSysUpdatedByOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SysUpdatedBy, true
}

// SetSysUpdatedBy sets field value
func (o *Region) SetSysUpdatedBy(v string) {
	o.SysUpdatedBy = v
}

// GetProvider returns the Provider field value
func (o *Region) GetProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *Region) GetProviderOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *Region) SetProvider(v string) {
	o.Provider = v
}

// GetSysCreatedOn returns the SysCreatedOn field value
func (o *Region) GetSysCreatedOn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SysCreatedOn
}

// GetSysCreatedOnOk returns a tuple with the SysCreatedOn field value
// and a boolean to check if the value has been set.
func (o *Region) GetSysCreatedOnOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SysCreatedOn, true
}

// SetSysCreatedOn sets field value
func (o *Region) SetSysCreatedOn(v string) {
	o.SysCreatedOn = v
}

// GetName returns the Name field value
func (o *Region) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Region) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Region) SetName(v string) {
	o.Name = v
}

// GetLocation returns the Location field value
func (o *Region) GetLocation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Location
}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
func (o *Region) GetLocationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Location, true
}

// SetLocation sets field value
func (o *Region) SetLocation(v string) {
	o.Location = v
}

// GetRegion returns the Region field value
func (o *Region) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *Region) GetRegionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *Region) SetRegion(v string) {
	o.Region = v
}

// GetSysCreatedBy returns the SysCreatedBy field value
func (o *Region) GetSysCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SysCreatedBy
}

// GetSysCreatedByOk returns a tuple with the SysCreatedBy field value
// and a boolean to check if the value has been set.
func (o *Region) GetSysCreatedByOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SysCreatedBy, true
}

// SetSysCreatedBy sets field value
func (o *Region) SetSysCreatedBy(v string) {
	o.SysCreatedBy = v
}

// GetApiHandle returns the ApiHandle field value
func (o *Region) GetApiHandle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiHandle
}

// GetApiHandleOk returns a tuple with the ApiHandle field value
// and a boolean to check if the value has been set.
func (o *Region) GetApiHandleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ApiHandle, true
}

// SetApiHandle sets field value
func (o *Region) SetApiHandle(v string) {
	o.ApiHandle = v
}

func (o Region) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["sys_mod_count"] = o.SysModCount
	}
	if true {
		toSerialize["active"] = o.Active
	}
	if true {
		toSerialize["sys_updated_on"] = o.SysUpdatedOn
	}
	if true {
		toSerialize["sys_tags"] = o.SysTags
	}
	if true {
		toSerialize["sys_id"] = o.SysId
	}
	if true {
		toSerialize["default"] = o.Default
	}
	if o.NodeType != nil {
		toSerialize["node_type"] = o.NodeType
	}
	if true {
		toSerialize["sys_updated_by"] = o.SysUpdatedBy
	}
	if true {
		toSerialize["provider"] = o.Provider
	}
	if true {
		toSerialize["sys_created_on"] = o.SysCreatedOn
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["location"] = o.Location
	}
	if true {
		toSerialize["region"] = o.Region
	}
	if true {
		toSerialize["sys_created_by"] = o.SysCreatedBy
	}
	if true {
		toSerialize["api_handle"] = o.ApiHandle
	}
	return json.Marshal(toSerialize)
}

type NullableRegion struct {
	value *Region
	isSet bool
}

func (v NullableRegion) Get() *Region {
	return v.value
}

func (v *NullableRegion) Set(val *Region) {
	v.value = val
	v.isSet = true
}

func (v NullableRegion) IsSet() bool {
	return v.isSet
}

func (v *NullableRegion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegion(val *Region) *NullableRegion {
	return &NullableRegion{value: val, isSet: true}
}

func (v NullableRegion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


