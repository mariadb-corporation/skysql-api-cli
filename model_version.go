/*
SkySQL API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.12
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package skysql

import (
	"encoding/json"
)

// Version Database version, e.g. 10.4 or 10.5
type Version struct {
	Product string `json:"product"`
	SysModCount string `json:"sys_mod_count"`
	SysUpdatedOn string `json:"sys_updated_on"`
	DisplayName string `json:"display_name"`
	SysTags string `json:"sys_tags"`
	Type string `json:"type"`
	EnterpriseVersion *string `json:"enterprise_version,omitempty"`
	ReleaseNotesUrl string `json:"release_notes_url"`
	SysId string `json:"sys_id"`
	SysUpdatedBy string `json:"sys_updated_by"`
	Public string `json:"public"`
	Provider string `json:"provider"`
	ReleaseDate string `json:"release_date"`
	SysCreatedOn string `json:"sys_created_on"`
	ParentRelease string `json:"parent_release"`
	Name string `json:"name"`
	SysCreatedBy string `json:"sys_created_by"`
}

// NewVersion instantiates a new Version object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVersion(product string, sysModCount string, sysUpdatedOn string, displayName string, sysTags string, type_ string, releaseNotesUrl string, sysId string, sysUpdatedBy string, public string, provider string, releaseDate string, sysCreatedOn string, parentRelease string, name string, sysCreatedBy string) *Version {
	this := Version{}
	this.Product = product
	this.SysModCount = sysModCount
	this.SysUpdatedOn = sysUpdatedOn
	this.DisplayName = displayName
	this.SysTags = sysTags
	this.Type = type_
	this.ReleaseNotesUrl = releaseNotesUrl
	this.SysId = sysId
	this.SysUpdatedBy = sysUpdatedBy
	this.Public = public
	this.Provider = provider
	this.ReleaseDate = releaseDate
	this.SysCreatedOn = sysCreatedOn
	this.ParentRelease = parentRelease
	this.Name = name
	this.SysCreatedBy = sysCreatedBy
	return &this
}

// NewVersionWithDefaults instantiates a new Version object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVersionWithDefaults() *Version {
	this := Version{}
	return &this
}

// GetProduct returns the Product field value
func (o *Version) GetProduct() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Product
}

// GetProductOk returns a tuple with the Product field value
// and a boolean to check if the value has been set.
func (o *Version) GetProductOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Product, true
}

// SetProduct sets field value
func (o *Version) SetProduct(v string) {
	o.Product = v
}

// GetSysModCount returns the SysModCount field value
func (o *Version) GetSysModCount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SysModCount
}

// GetSysModCountOk returns a tuple with the SysModCount field value
// and a boolean to check if the value has been set.
func (o *Version) GetSysModCountOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SysModCount, true
}

// SetSysModCount sets field value
func (o *Version) SetSysModCount(v string) {
	o.SysModCount = v
}

// GetSysUpdatedOn returns the SysUpdatedOn field value
func (o *Version) GetSysUpdatedOn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SysUpdatedOn
}

// GetSysUpdatedOnOk returns a tuple with the SysUpdatedOn field value
// and a boolean to check if the value has been set.
func (o *Version) GetSysUpdatedOnOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SysUpdatedOn, true
}

// SetSysUpdatedOn sets field value
func (o *Version) SetSysUpdatedOn(v string) {
	o.SysUpdatedOn = v
}

// GetDisplayName returns the DisplayName field value
func (o *Version) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *Version) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *Version) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetSysTags returns the SysTags field value
func (o *Version) GetSysTags() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SysTags
}

// GetSysTagsOk returns a tuple with the SysTags field value
// and a boolean to check if the value has been set.
func (o *Version) GetSysTagsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SysTags, true
}

// SetSysTags sets field value
func (o *Version) SetSysTags(v string) {
	o.SysTags = v
}

// GetType returns the Type field value
func (o *Version) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Version) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Version) SetType(v string) {
	o.Type = v
}

// GetEnterpriseVersion returns the EnterpriseVersion field value if set, zero value otherwise.
func (o *Version) GetEnterpriseVersion() string {
	if o == nil || o.EnterpriseVersion == nil {
		var ret string
		return ret
	}
	return *o.EnterpriseVersion
}

// GetEnterpriseVersionOk returns a tuple with the EnterpriseVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Version) GetEnterpriseVersionOk() (*string, bool) {
	if o == nil || o.EnterpriseVersion == nil {
		return nil, false
	}
	return o.EnterpriseVersion, true
}

// HasEnterpriseVersion returns a boolean if a field has been set.
func (o *Version) HasEnterpriseVersion() bool {
	if o != nil && o.EnterpriseVersion != nil {
		return true
	}

	return false
}

// SetEnterpriseVersion gets a reference to the given string and assigns it to the EnterpriseVersion field.
func (o *Version) SetEnterpriseVersion(v string) {
	o.EnterpriseVersion = &v
}

// GetReleaseNotesUrl returns the ReleaseNotesUrl field value
func (o *Version) GetReleaseNotesUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReleaseNotesUrl
}

// GetReleaseNotesUrlOk returns a tuple with the ReleaseNotesUrl field value
// and a boolean to check if the value has been set.
func (o *Version) GetReleaseNotesUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ReleaseNotesUrl, true
}

// SetReleaseNotesUrl sets field value
func (o *Version) SetReleaseNotesUrl(v string) {
	o.ReleaseNotesUrl = v
}

// GetSysId returns the SysId field value
func (o *Version) GetSysId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SysId
}

// GetSysIdOk returns a tuple with the SysId field value
// and a boolean to check if the value has been set.
func (o *Version) GetSysIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SysId, true
}

// SetSysId sets field value
func (o *Version) SetSysId(v string) {
	o.SysId = v
}

// GetSysUpdatedBy returns the SysUpdatedBy field value
func (o *Version) GetSysUpdatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SysUpdatedBy
}

// GetSysUpdatedByOk returns a tuple with the SysUpdatedBy field value
// and a boolean to check if the value has been set.
func (o *Version) GetSysUpdatedByOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SysUpdatedBy, true
}

// SetSysUpdatedBy sets field value
func (o *Version) SetSysUpdatedBy(v string) {
	o.SysUpdatedBy = v
}

// GetPublic returns the Public field value
func (o *Version) GetPublic() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Public
}

// GetPublicOk returns a tuple with the Public field value
// and a boolean to check if the value has been set.
func (o *Version) GetPublicOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Public, true
}

// SetPublic sets field value
func (o *Version) SetPublic(v string) {
	o.Public = v
}

// GetProvider returns the Provider field value
func (o *Version) GetProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *Version) GetProviderOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *Version) SetProvider(v string) {
	o.Provider = v
}

// GetReleaseDate returns the ReleaseDate field value
func (o *Version) GetReleaseDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReleaseDate
}

// GetReleaseDateOk returns a tuple with the ReleaseDate field value
// and a boolean to check if the value has been set.
func (o *Version) GetReleaseDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ReleaseDate, true
}

// SetReleaseDate sets field value
func (o *Version) SetReleaseDate(v string) {
	o.ReleaseDate = v
}

// GetSysCreatedOn returns the SysCreatedOn field value
func (o *Version) GetSysCreatedOn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SysCreatedOn
}

// GetSysCreatedOnOk returns a tuple with the SysCreatedOn field value
// and a boolean to check if the value has been set.
func (o *Version) GetSysCreatedOnOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SysCreatedOn, true
}

// SetSysCreatedOn sets field value
func (o *Version) SetSysCreatedOn(v string) {
	o.SysCreatedOn = v
}

// GetParentRelease returns the ParentRelease field value
func (o *Version) GetParentRelease() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ParentRelease
}

// GetParentReleaseOk returns a tuple with the ParentRelease field value
// and a boolean to check if the value has been set.
func (o *Version) GetParentReleaseOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ParentRelease, true
}

// SetParentRelease sets field value
func (o *Version) SetParentRelease(v string) {
	o.ParentRelease = v
}

// GetName returns the Name field value
func (o *Version) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Version) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Version) SetName(v string) {
	o.Name = v
}

// GetSysCreatedBy returns the SysCreatedBy field value
func (o *Version) GetSysCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SysCreatedBy
}

// GetSysCreatedByOk returns a tuple with the SysCreatedBy field value
// and a boolean to check if the value has been set.
func (o *Version) GetSysCreatedByOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SysCreatedBy, true
}

// SetSysCreatedBy sets field value
func (o *Version) SetSysCreatedBy(v string) {
	o.SysCreatedBy = v
}

func (o Version) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["product"] = o.Product
	}
	if true {
		toSerialize["sys_mod_count"] = o.SysModCount
	}
	if true {
		toSerialize["sys_updated_on"] = o.SysUpdatedOn
	}
	if true {
		toSerialize["display_name"] = o.DisplayName
	}
	if true {
		toSerialize["sys_tags"] = o.SysTags
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.EnterpriseVersion != nil {
		toSerialize["enterprise_version"] = o.EnterpriseVersion
	}
	if true {
		toSerialize["release_notes_url"] = o.ReleaseNotesUrl
	}
	if true {
		toSerialize["sys_id"] = o.SysId
	}
	if true {
		toSerialize["sys_updated_by"] = o.SysUpdatedBy
	}
	if true {
		toSerialize["public"] = o.Public
	}
	if true {
		toSerialize["provider"] = o.Provider
	}
	if true {
		toSerialize["release_date"] = o.ReleaseDate
	}
	if true {
		toSerialize["sys_created_on"] = o.SysCreatedOn
	}
	if true {
		toSerialize["parent_release"] = o.ParentRelease
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["sys_created_by"] = o.SysCreatedBy
	}
	return json.Marshal(toSerialize)
}

type NullableVersion struct {
	value *Version
	isSet bool
}

func (v NullableVersion) Get() *Version {
	return v.value
}

func (v *NullableVersion) Set(val *Version) {
	v.value = val
	v.isSet = true
}

func (v NullableVersion) IsSet() bool {
	return v.isSet
}

func (v *NullableVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVersion(val *Version) *NullableVersion {
	return &NullableVersion{value: val, isSet: true}
}

func (v NullableVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


