/*
SkySQL API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.12
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package skysql

import (
	"encoding/json"
)

// Database MariaDB cluster deployed by SkySQL
type Database struct {
	Cluster *string `json:"cluster,omitempty"`
	OperationalStatus string `json:"operational_status"`
	EnablePamAuthentication string `json:"enable_pam_authentication"`
	SysUpdatedOn string `json:"sys_updated_on"`
	Number string `json:"number"`
	InstanceState string `json:"instance_state"`
	ReadOnlyPort string `json:"read_only_port"`
	ReadWritePort string `json:"read_write_port"`
	Id string `json:"id"`
	ReleaseVersion string `json:"release_version"`
	GlAccount string `json:"gl_account"`
	SysCreatedBy string `json:"sys_created_by"`
	SslCertificate string `json:"ssl_certificate"`
	ColumnstoreBucket string `json:"columnstore_bucket"`
	Topology string `json:"topology"`
	OwnedBy string `json:"owned_by"`
	Proxy string `json:"proxy"`
	Size string `json:"size"`
	DnsDomain string `json:"dns_domain"`
	TxStorage string `json:"tx_storage"`
	SslExpiresOn string `json:"ssl_expires_on"`
	ReplMasterHostExt string `json:"repl_master_host_ext"`
	MaxscaleConfig string `json:"maxscale_config"`
	VolumeIops string `json:"volume_iops"`
	Attributes string `json:"attributes"`
	ReplicationStatus *string `json:"replication_status,omitempty"`
	SkipSync string `json:"skip_sync"`
	ReplicationType *string `json:"replication_type,omitempty"`
	ReplMaster string `json:"repl_master"`
	SysUpdatedBy string `json:"sys_updated_by"`
	BulkdataPort2 string `json:"bulkdata_port_2"`
	SysCreatedOn string `json:"sys_created_on"`
	BulkdataPort1 string `json:"bulkdata_port_1"`
	ActiveReplicas string `json:"active_replicas"`
	Fqdn string `json:"fqdn"`
	SslSerial string `json:"ssl_serial"`
	InstallStatus string `json:"install_status"`
	Name string `json:"name"`
	Region *string `json:"region,omitempty"`
	ReplRegion *string `json:"repl_region,omitempty"`
	CustomConfig string `json:"custom_config"`
	SysId string `json:"sys_id"`
	Provider string `json:"provider"`
	MacAddress string `json:"mac_address"`
	Replicas string `json:"replicas"`
	SysModCount string `json:"sys_mod_count"`
	Monitor string `json:"monitor"`
	IpAddress string `json:"ip_address"`
	MaxscaleProxy string `json:"maxscale_proxy"`
	FaultCount string `json:"fault_count"`
}

// NewDatabase instantiates a new Database object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDatabase(operationalStatus string, enablePamAuthentication string, sysUpdatedOn string, number string, instanceState string, readOnlyPort string, readWritePort string, id string, releaseVersion string, glAccount string, sysCreatedBy string, sslCertificate string, columnstoreBucket string, topology string, ownedBy string, proxy string, size string, dnsDomain string, txStorage string, sslExpiresOn string, replMasterHostExt string, maxscaleConfig string, volumeIops string, attributes string, skipSync string, replMaster string, sysUpdatedBy string, bulkdataPort2 string, sysCreatedOn string, bulkdataPort1 string, activeReplicas string, fqdn string, sslSerial string, installStatus string, name string, customConfig string, sysId string, provider string, macAddress string, replicas string, sysModCount string, monitor string, ipAddress string, maxscaleProxy string, faultCount string) *Database {
	this := Database{}
	this.OperationalStatus = operationalStatus
	this.EnablePamAuthentication = enablePamAuthentication
	this.SysUpdatedOn = sysUpdatedOn
	this.Number = number
	this.InstanceState = instanceState
	this.ReadOnlyPort = readOnlyPort
	this.ReadWritePort = readWritePort
	this.Id = id
	this.ReleaseVersion = releaseVersion
	this.GlAccount = glAccount
	this.SysCreatedBy = sysCreatedBy
	this.SslCertificate = sslCertificate
	this.ColumnstoreBucket = columnstoreBucket
	this.Topology = topology
	this.OwnedBy = ownedBy
	this.Proxy = proxy
	this.Size = size
	this.DnsDomain = dnsDomain
	this.TxStorage = txStorage
	this.SslExpiresOn = sslExpiresOn
	this.ReplMasterHostExt = replMasterHostExt
	this.MaxscaleConfig = maxscaleConfig
	this.VolumeIops = volumeIops
	this.Attributes = attributes
	this.SkipSync = skipSync
	this.ReplMaster = replMaster
	this.SysUpdatedBy = sysUpdatedBy
	this.BulkdataPort2 = bulkdataPort2
	this.SysCreatedOn = sysCreatedOn
	this.BulkdataPort1 = bulkdataPort1
	this.ActiveReplicas = activeReplicas
	this.Fqdn = fqdn
	this.SslSerial = sslSerial
	this.InstallStatus = installStatus
	this.Name = name
	this.CustomConfig = customConfig
	this.SysId = sysId
	this.Provider = provider
	this.MacAddress = macAddress
	this.Replicas = replicas
	this.SysModCount = sysModCount
	this.Monitor = monitor
	this.IpAddress = ipAddress
	this.MaxscaleProxy = maxscaleProxy
	this.FaultCount = faultCount
	return &this
}

// NewDatabaseWithDefaults instantiates a new Database object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDatabaseWithDefaults() *Database {
	this := Database{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *Database) GetCluster() string {
	if o == nil || o.Cluster == nil {
		var ret string
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Database) GetClusterOk() (*string, bool) {
	if o == nil || o.Cluster == nil {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *Database) HasCluster() bool {
	if o != nil && o.Cluster != nil {
		return true
	}

	return false
}

// SetCluster gets a reference to the given string and assigns it to the Cluster field.
func (o *Database) SetCluster(v string) {
	o.Cluster = &v
}

// GetOperationalStatus returns the OperationalStatus field value
func (o *Database) GetOperationalStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OperationalStatus
}

// GetOperationalStatusOk returns a tuple with the OperationalStatus field value
// and a boolean to check if the value has been set.
func (o *Database) GetOperationalStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OperationalStatus, true
}

// SetOperationalStatus sets field value
func (o *Database) SetOperationalStatus(v string) {
	o.OperationalStatus = v
}

// GetEnablePamAuthentication returns the EnablePamAuthentication field value
func (o *Database) GetEnablePamAuthentication() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnablePamAuthentication
}

// GetEnablePamAuthenticationOk returns a tuple with the EnablePamAuthentication field value
// and a boolean to check if the value has been set.
func (o *Database) GetEnablePamAuthenticationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EnablePamAuthentication, true
}

// SetEnablePamAuthentication sets field value
func (o *Database) SetEnablePamAuthentication(v string) {
	o.EnablePamAuthentication = v
}

// GetSysUpdatedOn returns the SysUpdatedOn field value
func (o *Database) GetSysUpdatedOn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SysUpdatedOn
}

// GetSysUpdatedOnOk returns a tuple with the SysUpdatedOn field value
// and a boolean to check if the value has been set.
func (o *Database) GetSysUpdatedOnOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SysUpdatedOn, true
}

// SetSysUpdatedOn sets field value
func (o *Database) SetSysUpdatedOn(v string) {
	o.SysUpdatedOn = v
}

// GetNumber returns the Number field value
func (o *Database) GetNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Number
}

// GetNumberOk returns a tuple with the Number field value
// and a boolean to check if the value has been set.
func (o *Database) GetNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Number, true
}

// SetNumber sets field value
func (o *Database) SetNumber(v string) {
	o.Number = v
}

// GetInstanceState returns the InstanceState field value
func (o *Database) GetInstanceState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceState
}

// GetInstanceStateOk returns a tuple with the InstanceState field value
// and a boolean to check if the value has been set.
func (o *Database) GetInstanceStateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.InstanceState, true
}

// SetInstanceState sets field value
func (o *Database) SetInstanceState(v string) {
	o.InstanceState = v
}

// GetReadOnlyPort returns the ReadOnlyPort field value
func (o *Database) GetReadOnlyPort() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReadOnlyPort
}

// GetReadOnlyPortOk returns a tuple with the ReadOnlyPort field value
// and a boolean to check if the value has been set.
func (o *Database) GetReadOnlyPortOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ReadOnlyPort, true
}

// SetReadOnlyPort sets field value
func (o *Database) SetReadOnlyPort(v string) {
	o.ReadOnlyPort = v
}

// GetReadWritePort returns the ReadWritePort field value
func (o *Database) GetReadWritePort() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReadWritePort
}

// GetReadWritePortOk returns a tuple with the ReadWritePort field value
// and a boolean to check if the value has been set.
func (o *Database) GetReadWritePortOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ReadWritePort, true
}

// SetReadWritePort sets field value
func (o *Database) SetReadWritePort(v string) {
	o.ReadWritePort = v
}

// GetId returns the Id field value
func (o *Database) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Database) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Database) SetId(v string) {
	o.Id = v
}

// GetReleaseVersion returns the ReleaseVersion field value
func (o *Database) GetReleaseVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReleaseVersion
}

// GetReleaseVersionOk returns a tuple with the ReleaseVersion field value
// and a boolean to check if the value has been set.
func (o *Database) GetReleaseVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ReleaseVersion, true
}

// SetReleaseVersion sets field value
func (o *Database) SetReleaseVersion(v string) {
	o.ReleaseVersion = v
}

// GetGlAccount returns the GlAccount field value
func (o *Database) GetGlAccount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GlAccount
}

// GetGlAccountOk returns a tuple with the GlAccount field value
// and a boolean to check if the value has been set.
func (o *Database) GetGlAccountOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.GlAccount, true
}

// SetGlAccount sets field value
func (o *Database) SetGlAccount(v string) {
	o.GlAccount = v
}

// GetSysCreatedBy returns the SysCreatedBy field value
func (o *Database) GetSysCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SysCreatedBy
}

// GetSysCreatedByOk returns a tuple with the SysCreatedBy field value
// and a boolean to check if the value has been set.
func (o *Database) GetSysCreatedByOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SysCreatedBy, true
}

// SetSysCreatedBy sets field value
func (o *Database) SetSysCreatedBy(v string) {
	o.SysCreatedBy = v
}

// GetSslCertificate returns the SslCertificate field value
func (o *Database) GetSslCertificate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SslCertificate
}

// GetSslCertificateOk returns a tuple with the SslCertificate field value
// and a boolean to check if the value has been set.
func (o *Database) GetSslCertificateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SslCertificate, true
}

// SetSslCertificate sets field value
func (o *Database) SetSslCertificate(v string) {
	o.SslCertificate = v
}

// GetColumnstoreBucket returns the ColumnstoreBucket field value
func (o *Database) GetColumnstoreBucket() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ColumnstoreBucket
}

// GetColumnstoreBucketOk returns a tuple with the ColumnstoreBucket field value
// and a boolean to check if the value has been set.
func (o *Database) GetColumnstoreBucketOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ColumnstoreBucket, true
}

// SetColumnstoreBucket sets field value
func (o *Database) SetColumnstoreBucket(v string) {
	o.ColumnstoreBucket = v
}

// GetTopology returns the Topology field value
func (o *Database) GetTopology() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Topology
}

// GetTopologyOk returns a tuple with the Topology field value
// and a boolean to check if the value has been set.
func (o *Database) GetTopologyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Topology, true
}

// SetTopology sets field value
func (o *Database) SetTopology(v string) {
	o.Topology = v
}

// GetOwnedBy returns the OwnedBy field value
func (o *Database) GetOwnedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OwnedBy
}

// GetOwnedByOk returns a tuple with the OwnedBy field value
// and a boolean to check if the value has been set.
func (o *Database) GetOwnedByOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OwnedBy, true
}

// SetOwnedBy sets field value
func (o *Database) SetOwnedBy(v string) {
	o.OwnedBy = v
}

// GetProxy returns the Proxy field value
func (o *Database) GetProxy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Proxy
}

// GetProxyOk returns a tuple with the Proxy field value
// and a boolean to check if the value has been set.
func (o *Database) GetProxyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Proxy, true
}

// SetProxy sets field value
func (o *Database) SetProxy(v string) {
	o.Proxy = v
}

// GetSize returns the Size field value
func (o *Database) GetSize() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *Database) GetSizeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *Database) SetSize(v string) {
	o.Size = v
}

// GetDnsDomain returns the DnsDomain field value
func (o *Database) GetDnsDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DnsDomain
}

// GetDnsDomainOk returns a tuple with the DnsDomain field value
// and a boolean to check if the value has been set.
func (o *Database) GetDnsDomainOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DnsDomain, true
}

// SetDnsDomain sets field value
func (o *Database) SetDnsDomain(v string) {
	o.DnsDomain = v
}

// GetTxStorage returns the TxStorage field value
func (o *Database) GetTxStorage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TxStorage
}

// GetTxStorageOk returns a tuple with the TxStorage field value
// and a boolean to check if the value has been set.
func (o *Database) GetTxStorageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TxStorage, true
}

// SetTxStorage sets field value
func (o *Database) SetTxStorage(v string) {
	o.TxStorage = v
}

// GetSslExpiresOn returns the SslExpiresOn field value
func (o *Database) GetSslExpiresOn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SslExpiresOn
}

// GetSslExpiresOnOk returns a tuple with the SslExpiresOn field value
// and a boolean to check if the value has been set.
func (o *Database) GetSslExpiresOnOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SslExpiresOn, true
}

// SetSslExpiresOn sets field value
func (o *Database) SetSslExpiresOn(v string) {
	o.SslExpiresOn = v
}

// GetReplMasterHostExt returns the ReplMasterHostExt field value
func (o *Database) GetReplMasterHostExt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReplMasterHostExt
}

// GetReplMasterHostExtOk returns a tuple with the ReplMasterHostExt field value
// and a boolean to check if the value has been set.
func (o *Database) GetReplMasterHostExtOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ReplMasterHostExt, true
}

// SetReplMasterHostExt sets field value
func (o *Database) SetReplMasterHostExt(v string) {
	o.ReplMasterHostExt = v
}

// GetMaxscaleConfig returns the MaxscaleConfig field value
func (o *Database) GetMaxscaleConfig() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MaxscaleConfig
}

// GetMaxscaleConfigOk returns a tuple with the MaxscaleConfig field value
// and a boolean to check if the value has been set.
func (o *Database) GetMaxscaleConfigOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MaxscaleConfig, true
}

// SetMaxscaleConfig sets field value
func (o *Database) SetMaxscaleConfig(v string) {
	o.MaxscaleConfig = v
}

// GetVolumeIops returns the VolumeIops field value
func (o *Database) GetVolumeIops() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VolumeIops
}

// GetVolumeIopsOk returns a tuple with the VolumeIops field value
// and a boolean to check if the value has been set.
func (o *Database) GetVolumeIopsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VolumeIops, true
}

// SetVolumeIops sets field value
func (o *Database) SetVolumeIops(v string) {
	o.VolumeIops = v
}

// GetAttributes returns the Attributes field value
func (o *Database) GetAttributes() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value
// and a boolean to check if the value has been set.
func (o *Database) GetAttributesOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Attributes, true
}

// SetAttributes sets field value
func (o *Database) SetAttributes(v string) {
	o.Attributes = v
}

// GetReplicationStatus returns the ReplicationStatus field value if set, zero value otherwise.
func (o *Database) GetReplicationStatus() string {
	if o == nil || o.ReplicationStatus == nil {
		var ret string
		return ret
	}
	return *o.ReplicationStatus
}

// GetReplicationStatusOk returns a tuple with the ReplicationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Database) GetReplicationStatusOk() (*string, bool) {
	if o == nil || o.ReplicationStatus == nil {
		return nil, false
	}
	return o.ReplicationStatus, true
}

// HasReplicationStatus returns a boolean if a field has been set.
func (o *Database) HasReplicationStatus() bool {
	if o != nil && o.ReplicationStatus != nil {
		return true
	}

	return false
}

// SetReplicationStatus gets a reference to the given string and assigns it to the ReplicationStatus field.
func (o *Database) SetReplicationStatus(v string) {
	o.ReplicationStatus = &v
}

// GetSkipSync returns the SkipSync field value
func (o *Database) GetSkipSync() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SkipSync
}

// GetSkipSyncOk returns a tuple with the SkipSync field value
// and a boolean to check if the value has been set.
func (o *Database) GetSkipSyncOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SkipSync, true
}

// SetSkipSync sets field value
func (o *Database) SetSkipSync(v string) {
	o.SkipSync = v
}

// GetReplicationType returns the ReplicationType field value if set, zero value otherwise.
func (o *Database) GetReplicationType() string {
	if o == nil || o.ReplicationType == nil {
		var ret string
		return ret
	}
	return *o.ReplicationType
}

// GetReplicationTypeOk returns a tuple with the ReplicationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Database) GetReplicationTypeOk() (*string, bool) {
	if o == nil || o.ReplicationType == nil {
		return nil, false
	}
	return o.ReplicationType, true
}

// HasReplicationType returns a boolean if a field has been set.
func (o *Database) HasReplicationType() bool {
	if o != nil && o.ReplicationType != nil {
		return true
	}

	return false
}

// SetReplicationType gets a reference to the given string and assigns it to the ReplicationType field.
func (o *Database) SetReplicationType(v string) {
	o.ReplicationType = &v
}

// GetReplMaster returns the ReplMaster field value
func (o *Database) GetReplMaster() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReplMaster
}

// GetReplMasterOk returns a tuple with the ReplMaster field value
// and a boolean to check if the value has been set.
func (o *Database) GetReplMasterOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ReplMaster, true
}

// SetReplMaster sets field value
func (o *Database) SetReplMaster(v string) {
	o.ReplMaster = v
}

// GetSysUpdatedBy returns the SysUpdatedBy field value
func (o *Database) GetSysUpdatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SysUpdatedBy
}

// GetSysUpdatedByOk returns a tuple with the SysUpdatedBy field value
// and a boolean to check if the value has been set.
func (o *Database) GetSysUpdatedByOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SysUpdatedBy, true
}

// SetSysUpdatedBy sets field value
func (o *Database) SetSysUpdatedBy(v string) {
	o.SysUpdatedBy = v
}

// GetBulkdataPort2 returns the BulkdataPort2 field value
func (o *Database) GetBulkdataPort2() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BulkdataPort2
}

// GetBulkdataPort2Ok returns a tuple with the BulkdataPort2 field value
// and a boolean to check if the value has been set.
func (o *Database) GetBulkdataPort2Ok() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BulkdataPort2, true
}

// SetBulkdataPort2 sets field value
func (o *Database) SetBulkdataPort2(v string) {
	o.BulkdataPort2 = v
}

// GetSysCreatedOn returns the SysCreatedOn field value
func (o *Database) GetSysCreatedOn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SysCreatedOn
}

// GetSysCreatedOnOk returns a tuple with the SysCreatedOn field value
// and a boolean to check if the value has been set.
func (o *Database) GetSysCreatedOnOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SysCreatedOn, true
}

// SetSysCreatedOn sets field value
func (o *Database) SetSysCreatedOn(v string) {
	o.SysCreatedOn = v
}

// GetBulkdataPort1 returns the BulkdataPort1 field value
func (o *Database) GetBulkdataPort1() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BulkdataPort1
}

// GetBulkdataPort1Ok returns a tuple with the BulkdataPort1 field value
// and a boolean to check if the value has been set.
func (o *Database) GetBulkdataPort1Ok() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BulkdataPort1, true
}

// SetBulkdataPort1 sets field value
func (o *Database) SetBulkdataPort1(v string) {
	o.BulkdataPort1 = v
}

// GetActiveReplicas returns the ActiveReplicas field value
func (o *Database) GetActiveReplicas() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActiveReplicas
}

// GetActiveReplicasOk returns a tuple with the ActiveReplicas field value
// and a boolean to check if the value has been set.
func (o *Database) GetActiveReplicasOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ActiveReplicas, true
}

// SetActiveReplicas sets field value
func (o *Database) SetActiveReplicas(v string) {
	o.ActiveReplicas = v
}

// GetFqdn returns the Fqdn field value
func (o *Database) GetFqdn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Fqdn
}

// GetFqdnOk returns a tuple with the Fqdn field value
// and a boolean to check if the value has been set.
func (o *Database) GetFqdnOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Fqdn, true
}

// SetFqdn sets field value
func (o *Database) SetFqdn(v string) {
	o.Fqdn = v
}

// GetSslSerial returns the SslSerial field value
func (o *Database) GetSslSerial() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SslSerial
}

// GetSslSerialOk returns a tuple with the SslSerial field value
// and a boolean to check if the value has been set.
func (o *Database) GetSslSerialOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SslSerial, true
}

// SetSslSerial sets field value
func (o *Database) SetSslSerial(v string) {
	o.SslSerial = v
}

// GetInstallStatus returns the InstallStatus field value
func (o *Database) GetInstallStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstallStatus
}

// GetInstallStatusOk returns a tuple with the InstallStatus field value
// and a boolean to check if the value has been set.
func (o *Database) GetInstallStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.InstallStatus, true
}

// SetInstallStatus sets field value
func (o *Database) SetInstallStatus(v string) {
	o.InstallStatus = v
}

// GetName returns the Name field value
func (o *Database) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Database) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Database) SetName(v string) {
	o.Name = v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *Database) GetRegion() string {
	if o == nil || o.Region == nil {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Database) GetRegionOk() (*string, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *Database) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *Database) SetRegion(v string) {
	o.Region = &v
}

// GetReplRegion returns the ReplRegion field value if set, zero value otherwise.
func (o *Database) GetReplRegion() string {
	if o == nil || o.ReplRegion == nil {
		var ret string
		return ret
	}
	return *o.ReplRegion
}

// GetReplRegionOk returns a tuple with the ReplRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Database) GetReplRegionOk() (*string, bool) {
	if o == nil || o.ReplRegion == nil {
		return nil, false
	}
	return o.ReplRegion, true
}

// HasReplRegion returns a boolean if a field has been set.
func (o *Database) HasReplRegion() bool {
	if o != nil && o.ReplRegion != nil {
		return true
	}

	return false
}

// SetReplRegion gets a reference to the given string and assigns it to the ReplRegion field.
func (o *Database) SetReplRegion(v string) {
	o.ReplRegion = &v
}

// GetCustomConfig returns the CustomConfig field value
func (o *Database) GetCustomConfig() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomConfig
}

// GetCustomConfigOk returns a tuple with the CustomConfig field value
// and a boolean to check if the value has been set.
func (o *Database) GetCustomConfigOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CustomConfig, true
}

// SetCustomConfig sets field value
func (o *Database) SetCustomConfig(v string) {
	o.CustomConfig = v
}

// GetSysId returns the SysId field value
func (o *Database) GetSysId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SysId
}

// GetSysIdOk returns a tuple with the SysId field value
// and a boolean to check if the value has been set.
func (o *Database) GetSysIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SysId, true
}

// SetSysId sets field value
func (o *Database) SetSysId(v string) {
	o.SysId = v
}

// GetProvider returns the Provider field value
func (o *Database) GetProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *Database) GetProviderOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *Database) SetProvider(v string) {
	o.Provider = v
}

// GetMacAddress returns the MacAddress field value
func (o *Database) GetMacAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value
// and a boolean to check if the value has been set.
func (o *Database) GetMacAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MacAddress, true
}

// SetMacAddress sets field value
func (o *Database) SetMacAddress(v string) {
	o.MacAddress = v
}

// GetReplicas returns the Replicas field value
func (o *Database) GetReplicas() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Replicas
}

// GetReplicasOk returns a tuple with the Replicas field value
// and a boolean to check if the value has been set.
func (o *Database) GetReplicasOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Replicas, true
}

// SetReplicas sets field value
func (o *Database) SetReplicas(v string) {
	o.Replicas = v
}

// GetSysModCount returns the SysModCount field value
func (o *Database) GetSysModCount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SysModCount
}

// GetSysModCountOk returns a tuple with the SysModCount field value
// and a boolean to check if the value has been set.
func (o *Database) GetSysModCountOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SysModCount, true
}

// SetSysModCount sets field value
func (o *Database) SetSysModCount(v string) {
	o.SysModCount = v
}

// GetMonitor returns the Monitor field value
func (o *Database) GetMonitor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Monitor
}

// GetMonitorOk returns a tuple with the Monitor field value
// and a boolean to check if the value has been set.
func (o *Database) GetMonitorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Monitor, true
}

// SetMonitor sets field value
func (o *Database) SetMonitor(v string) {
	o.Monitor = v
}

// GetIpAddress returns the IpAddress field value
func (o *Database) GetIpAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value
// and a boolean to check if the value has been set.
func (o *Database) GetIpAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IpAddress, true
}

// SetIpAddress sets field value
func (o *Database) SetIpAddress(v string) {
	o.IpAddress = v
}

// GetMaxscaleProxy returns the MaxscaleProxy field value
func (o *Database) GetMaxscaleProxy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MaxscaleProxy
}

// GetMaxscaleProxyOk returns a tuple with the MaxscaleProxy field value
// and a boolean to check if the value has been set.
func (o *Database) GetMaxscaleProxyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MaxscaleProxy, true
}

// SetMaxscaleProxy sets field value
func (o *Database) SetMaxscaleProxy(v string) {
	o.MaxscaleProxy = v
}

// GetFaultCount returns the FaultCount field value
func (o *Database) GetFaultCount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FaultCount
}

// GetFaultCountOk returns a tuple with the FaultCount field value
// and a boolean to check if the value has been set.
func (o *Database) GetFaultCountOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FaultCount, true
}

// SetFaultCount sets field value
func (o *Database) SetFaultCount(v string) {
	o.FaultCount = v
}

func (o Database) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cluster != nil {
		toSerialize["cluster"] = o.Cluster
	}
	if true {
		toSerialize["operational_status"] = o.OperationalStatus
	}
	if true {
		toSerialize["enable_pam_authentication"] = o.EnablePamAuthentication
	}
	if true {
		toSerialize["sys_updated_on"] = o.SysUpdatedOn
	}
	if true {
		toSerialize["number"] = o.Number
	}
	if true {
		toSerialize["instance_state"] = o.InstanceState
	}
	if true {
		toSerialize["read_only_port"] = o.ReadOnlyPort
	}
	if true {
		toSerialize["read_write_port"] = o.ReadWritePort
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["release_version"] = o.ReleaseVersion
	}
	if true {
		toSerialize["gl_account"] = o.GlAccount
	}
	if true {
		toSerialize["sys_created_by"] = o.SysCreatedBy
	}
	if true {
		toSerialize["ssl_certificate"] = o.SslCertificate
	}
	if true {
		toSerialize["columnstore_bucket"] = o.ColumnstoreBucket
	}
	if true {
		toSerialize["topology"] = o.Topology
	}
	if true {
		toSerialize["owned_by"] = o.OwnedBy
	}
	if true {
		toSerialize["proxy"] = o.Proxy
	}
	if true {
		toSerialize["size"] = o.Size
	}
	if true {
		toSerialize["dns_domain"] = o.DnsDomain
	}
	if true {
		toSerialize["tx_storage"] = o.TxStorage
	}
	if true {
		toSerialize["ssl_expires_on"] = o.SslExpiresOn
	}
	if true {
		toSerialize["repl_master_host_ext"] = o.ReplMasterHostExt
	}
	if true {
		toSerialize["maxscale_config"] = o.MaxscaleConfig
	}
	if true {
		toSerialize["volume_iops"] = o.VolumeIops
	}
	if true {
		toSerialize["attributes"] = o.Attributes
	}
	if o.ReplicationStatus != nil {
		toSerialize["replication_status"] = o.ReplicationStatus
	}
	if true {
		toSerialize["skip_sync"] = o.SkipSync
	}
	if o.ReplicationType != nil {
		toSerialize["replication_type"] = o.ReplicationType
	}
	if true {
		toSerialize["repl_master"] = o.ReplMaster
	}
	if true {
		toSerialize["sys_updated_by"] = o.SysUpdatedBy
	}
	if true {
		toSerialize["bulkdata_port_2"] = o.BulkdataPort2
	}
	if true {
		toSerialize["sys_created_on"] = o.SysCreatedOn
	}
	if true {
		toSerialize["bulkdata_port_1"] = o.BulkdataPort1
	}
	if true {
		toSerialize["active_replicas"] = o.ActiveReplicas
	}
	if true {
		toSerialize["fqdn"] = o.Fqdn
	}
	if true {
		toSerialize["ssl_serial"] = o.SslSerial
	}
	if true {
		toSerialize["install_status"] = o.InstallStatus
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	if o.ReplRegion != nil {
		toSerialize["repl_region"] = o.ReplRegion
	}
	if true {
		toSerialize["custom_config"] = o.CustomConfig
	}
	if true {
		toSerialize["sys_id"] = o.SysId
	}
	if true {
		toSerialize["provider"] = o.Provider
	}
	if true {
		toSerialize["mac_address"] = o.MacAddress
	}
	if true {
		toSerialize["replicas"] = o.Replicas
	}
	if true {
		toSerialize["sys_mod_count"] = o.SysModCount
	}
	if true {
		toSerialize["monitor"] = o.Monitor
	}
	if true {
		toSerialize["ip_address"] = o.IpAddress
	}
	if true {
		toSerialize["maxscale_proxy"] = o.MaxscaleProxy
	}
	if true {
		toSerialize["fault_count"] = o.FaultCount
	}
	return json.Marshal(toSerialize)
}

type NullableDatabase struct {
	value *Database
	isSet bool
}

func (v NullableDatabase) Get() *Database {
	return v.value
}

func (v *NullableDatabase) Set(val *Database) {
	v.value = val
	v.isSet = true
}

func (v NullableDatabase) IsSet() bool {
	return v.isSet
}

func (v *NullableDatabase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDatabase(val *Database) *NullableDatabase {
	return &NullableDatabase{value: val, isSet: true}
}

func (v NullableDatabase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDatabase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


