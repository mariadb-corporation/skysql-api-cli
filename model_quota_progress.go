/*
SkySQL API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.12
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package skysql

import (
	"encoding/json"
)

// QuotaProgress A quota progress response
type QuotaProgress struct {
	Name string `json:"name"`
	Description string `json:"description"`
	Limit int32 `json:"limit"`
	Remaining *int32 `json:"remaining,omitempty"`
	Used *int32 `json:"used,omitempty"`
	Region *string `json:"region,omitempty"`
	Provider *string `json:"provider,omitempty"`
}

// NewQuotaProgress instantiates a new QuotaProgress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuotaProgress(name string, description string, limit int32) *QuotaProgress {
	this := QuotaProgress{}
	this.Name = name
	this.Description = description
	this.Limit = limit
	return &this
}

// NewQuotaProgressWithDefaults instantiates a new QuotaProgress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuotaProgressWithDefaults() *QuotaProgress {
	this := QuotaProgress{}
	return &this
}

// GetName returns the Name field value
func (o *QuotaProgress) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *QuotaProgress) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *QuotaProgress) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *QuotaProgress) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *QuotaProgress) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *QuotaProgress) SetDescription(v string) {
	o.Description = v
}

// GetLimit returns the Limit field value
func (o *QuotaProgress) GetLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Limit
}

// GetLimitOk returns a tuple with the Limit field value
// and a boolean to check if the value has been set.
func (o *QuotaProgress) GetLimitOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Limit, true
}

// SetLimit sets field value
func (o *QuotaProgress) SetLimit(v int32) {
	o.Limit = v
}

// GetRemaining returns the Remaining field value if set, zero value otherwise.
func (o *QuotaProgress) GetRemaining() int32 {
	if o == nil || o.Remaining == nil {
		var ret int32
		return ret
	}
	return *o.Remaining
}

// GetRemainingOk returns a tuple with the Remaining field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaProgress) GetRemainingOk() (*int32, bool) {
	if o == nil || o.Remaining == nil {
		return nil, false
	}
	return o.Remaining, true
}

// HasRemaining returns a boolean if a field has been set.
func (o *QuotaProgress) HasRemaining() bool {
	if o != nil && o.Remaining != nil {
		return true
	}

	return false
}

// SetRemaining gets a reference to the given int32 and assigns it to the Remaining field.
func (o *QuotaProgress) SetRemaining(v int32) {
	o.Remaining = &v
}

// GetUsed returns the Used field value if set, zero value otherwise.
func (o *QuotaProgress) GetUsed() int32 {
	if o == nil || o.Used == nil {
		var ret int32
		return ret
	}
	return *o.Used
}

// GetUsedOk returns a tuple with the Used field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaProgress) GetUsedOk() (*int32, bool) {
	if o == nil || o.Used == nil {
		return nil, false
	}
	return o.Used, true
}

// HasUsed returns a boolean if a field has been set.
func (o *QuotaProgress) HasUsed() bool {
	if o != nil && o.Used != nil {
		return true
	}

	return false
}

// SetUsed gets a reference to the given int32 and assigns it to the Used field.
func (o *QuotaProgress) SetUsed(v int32) {
	o.Used = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *QuotaProgress) GetRegion() string {
	if o == nil || o.Region == nil {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaProgress) GetRegionOk() (*string, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *QuotaProgress) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *QuotaProgress) SetRegion(v string) {
	o.Region = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *QuotaProgress) GetProvider() string {
	if o == nil || o.Provider == nil {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaProgress) GetProviderOk() (*string, bool) {
	if o == nil || o.Provider == nil {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *QuotaProgress) HasProvider() bool {
	if o != nil && o.Provider != nil {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *QuotaProgress) SetProvider(v string) {
	o.Provider = &v
}

func (o QuotaProgress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["limit"] = o.Limit
	}
	if o.Remaining != nil {
		toSerialize["remaining"] = o.Remaining
	}
	if o.Used != nil {
		toSerialize["used"] = o.Used
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	if o.Provider != nil {
		toSerialize["provider"] = o.Provider
	}
	return json.Marshal(toSerialize)
}

type NullableQuotaProgress struct {
	value *QuotaProgress
	isSet bool
}

func (v NullableQuotaProgress) Get() *QuotaProgress {
	return v.value
}

func (v *NullableQuotaProgress) Set(val *QuotaProgress) {
	v.value = val
	v.isSet = true
}

func (v NullableQuotaProgress) IsSet() bool {
	return v.isSet
}

func (v *NullableQuotaProgress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuotaProgress(val *QuotaProgress) *NullableQuotaProgress {
	return &NullableQuotaProgress{value: val, isSet: true}
}

func (v NullableQuotaProgress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuotaProgress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


