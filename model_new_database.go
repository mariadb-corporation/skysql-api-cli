/*
SkySQL API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.12
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package skysql

import (
	"encoding/json"
)

// NewDatabase Request body to create a new MariaDB cluster deployed by SkySQL
type NewDatabase struct {
	ReleaseVersion string `json:"release_version"`
	Topology string `json:"topology"`
	Size string `json:"size"`
	TxStorage string `json:"tx_storage"`
	MaxscaleConfig string `json:"maxscale_config"`
	Name string `json:"name"`
	Region string `json:"region"`
	ReplRegion string `json:"repl_region"`
	Provider string `json:"provider"`
	Replicas string `json:"replicas"`
	Monitor string `json:"monitor"`
	MaxscaleProxy string `json:"maxscale_proxy"`
}

// NewNewDatabase instantiates a new NewDatabase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewDatabase(releaseVersion string, topology string, size string, txStorage string, maxscaleConfig string, name string, region string, replRegion string, provider string, replicas string, monitor string, maxscaleProxy string) *NewDatabase {
	this := NewDatabase{}
	this.ReleaseVersion = releaseVersion
	this.Topology = topology
	this.Size = size
	this.TxStorage = txStorage
	this.MaxscaleConfig = maxscaleConfig
	this.Name = name
	this.Region = region
	this.ReplRegion = replRegion
	this.Provider = provider
	this.Replicas = replicas
	this.Monitor = monitor
	this.MaxscaleProxy = maxscaleProxy
	return &this
}

// NewNewDatabaseWithDefaults instantiates a new NewDatabase object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewDatabaseWithDefaults() *NewDatabase {
	this := NewDatabase{}
	return &this
}

// GetReleaseVersion returns the ReleaseVersion field value
func (o *NewDatabase) GetReleaseVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReleaseVersion
}

// GetReleaseVersionOk returns a tuple with the ReleaseVersion field value
// and a boolean to check if the value has been set.
func (o *NewDatabase) GetReleaseVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ReleaseVersion, true
}

// SetReleaseVersion sets field value
func (o *NewDatabase) SetReleaseVersion(v string) {
	o.ReleaseVersion = v
}

// GetTopology returns the Topology field value
func (o *NewDatabase) GetTopology() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Topology
}

// GetTopologyOk returns a tuple with the Topology field value
// and a boolean to check if the value has been set.
func (o *NewDatabase) GetTopologyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Topology, true
}

// SetTopology sets field value
func (o *NewDatabase) SetTopology(v string) {
	o.Topology = v
}

// GetSize returns the Size field value
func (o *NewDatabase) GetSize() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *NewDatabase) GetSizeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *NewDatabase) SetSize(v string) {
	o.Size = v
}

// GetTxStorage returns the TxStorage field value
func (o *NewDatabase) GetTxStorage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TxStorage
}

// GetTxStorageOk returns a tuple with the TxStorage field value
// and a boolean to check if the value has been set.
func (o *NewDatabase) GetTxStorageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TxStorage, true
}

// SetTxStorage sets field value
func (o *NewDatabase) SetTxStorage(v string) {
	o.TxStorage = v
}

// GetMaxscaleConfig returns the MaxscaleConfig field value
func (o *NewDatabase) GetMaxscaleConfig() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MaxscaleConfig
}

// GetMaxscaleConfigOk returns a tuple with the MaxscaleConfig field value
// and a boolean to check if the value has been set.
func (o *NewDatabase) GetMaxscaleConfigOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MaxscaleConfig, true
}

// SetMaxscaleConfig sets field value
func (o *NewDatabase) SetMaxscaleConfig(v string) {
	o.MaxscaleConfig = v
}

// GetName returns the Name field value
func (o *NewDatabase) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *NewDatabase) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *NewDatabase) SetName(v string) {
	o.Name = v
}

// GetRegion returns the Region field value
func (o *NewDatabase) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *NewDatabase) GetRegionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *NewDatabase) SetRegion(v string) {
	o.Region = v
}

// GetReplRegion returns the ReplRegion field value
func (o *NewDatabase) GetReplRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReplRegion
}

// GetReplRegionOk returns a tuple with the ReplRegion field value
// and a boolean to check if the value has been set.
func (o *NewDatabase) GetReplRegionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ReplRegion, true
}

// SetReplRegion sets field value
func (o *NewDatabase) SetReplRegion(v string) {
	o.ReplRegion = v
}

// GetProvider returns the Provider field value
func (o *NewDatabase) GetProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *NewDatabase) GetProviderOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *NewDatabase) SetProvider(v string) {
	o.Provider = v
}

// GetReplicas returns the Replicas field value
func (o *NewDatabase) GetReplicas() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Replicas
}

// GetReplicasOk returns a tuple with the Replicas field value
// and a boolean to check if the value has been set.
func (o *NewDatabase) GetReplicasOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Replicas, true
}

// SetReplicas sets field value
func (o *NewDatabase) SetReplicas(v string) {
	o.Replicas = v
}

// GetMonitor returns the Monitor field value
func (o *NewDatabase) GetMonitor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Monitor
}

// GetMonitorOk returns a tuple with the Monitor field value
// and a boolean to check if the value has been set.
func (o *NewDatabase) GetMonitorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Monitor, true
}

// SetMonitor sets field value
func (o *NewDatabase) SetMonitor(v string) {
	o.Monitor = v
}

// GetMaxscaleProxy returns the MaxscaleProxy field value
func (o *NewDatabase) GetMaxscaleProxy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MaxscaleProxy
}

// GetMaxscaleProxyOk returns a tuple with the MaxscaleProxy field value
// and a boolean to check if the value has been set.
func (o *NewDatabase) GetMaxscaleProxyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MaxscaleProxy, true
}

// SetMaxscaleProxy sets field value
func (o *NewDatabase) SetMaxscaleProxy(v string) {
	o.MaxscaleProxy = v
}

func (o NewDatabase) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["release_version"] = o.ReleaseVersion
	}
	if true {
		toSerialize["topology"] = o.Topology
	}
	if true {
		toSerialize["size"] = o.Size
	}
	if true {
		toSerialize["tx_storage"] = o.TxStorage
	}
	if true {
		toSerialize["maxscale_config"] = o.MaxscaleConfig
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["region"] = o.Region
	}
	if true {
		toSerialize["repl_region"] = o.ReplRegion
	}
	if true {
		toSerialize["provider"] = o.Provider
	}
	if true {
		toSerialize["replicas"] = o.Replicas
	}
	if true {
		toSerialize["monitor"] = o.Monitor
	}
	if true {
		toSerialize["maxscale_proxy"] = o.MaxscaleProxy
	}
	return json.Marshal(toSerialize)
}

type NullableNewDatabase struct {
	value *NewDatabase
	isSet bool
}

func (v NullableNewDatabase) Get() *NewDatabase {
	return v.value
}

func (v *NullableNewDatabase) Set(val *NewDatabase) {
	v.value = val
	v.isSet = true
}

func (v NullableNewDatabase) IsSet() bool {
	return v.isSet
}

func (v *NullableNewDatabase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNewDatabase(val *NewDatabase) *NullableNewDatabase {
	return &NullableNewDatabase{value: val, isSet: true}
}

func (v NullableNewDatabase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNewDatabase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


